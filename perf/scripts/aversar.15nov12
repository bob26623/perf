#!/usr/bin/perl

#print $ARGV[0];
 
### create time column
open(FILE,"time.txt") or die ("Cannot open file: $!");
$data[0][0]="time";
$hr=1;
while (<FILE>){
 chomp;
 $data[0][$hr] = $_;
 $hr++;
}
close (FILE);
use POSIX;
$data[1][0]="%usr";
$data[2][0]="%sys";
$data[3][0]="%wio";
$data[4][0]="%idle";
$data[5][0]="%peak";
$data[6][0]="%aver";
$count=0;
#### create data column
@list = ` ls -tr *sar-u`;
for $file (@list){
 open(FILE,$file) or die ("Cannot open file: $!");
 @lines = <FILE>;
 close (FILE);
 $hr=1;
 for $data (@lines){
   if ( $data=~/\d+:\d+:\d+\s+\d+/) {
      $_ = $data;
#print $data;
      ($usr)=/\s+(\d+)/;
      ($sys)=/\s+\d+\s+(\d+)/;
      ($wio)=/\s+\d+\s+\d+\s+(\d+)/;
      ($idle)=/\s+\d+\s+\d+\s+\d+\s+(\d+)/;
#print "usr = $usr\n";
	$data[1][$hr]+=$usr;
	$data[2][$hr]+=$sys;
	$data[3][$hr]+=$wio;
	$data[4][$hr]+=$idle;
	if ($data[5][$hr] > $idle || $data[5][$hr] == "") {
	  if ($usr != 0 && $sys != 0) {
	 	$data[5][$hr]=$idle;
	  }
	}
#print "$hr. = $data[1][$hr]\n";
      $hr++;
   }
 }
 $count++;
}
close(FILE);

### write output
open(FILE,">aversar.out") or die ("Cannot open file: $!");
for (my $i=0;$i<=6;$i++){
  print FILE "$data[$i][0]\t";
}
print FILE "\n";
for(my $j = 1; $j < $hr ; $j++){
      print FILE "$data[0][$j]\t";
   for(my $i = 1; $i <= 4; $i++){
      printf FILE ("%.2f\t",$data[$i][$j]/$count);
#print FILE "$data[$i][$j]\t";
   }
   print FILE ceil(100-$data[5][$j])."\t";
   printf FILE ("%.2f\n",100-($data[4][$j]/$count));
   #print FILE "\n";
}
close(FILE);
