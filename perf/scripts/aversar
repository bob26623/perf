#!/usr/bin/perl

use POSIX;

##### check gather every x minutes
@list = ` ls -tr *sar-u`;
$count=0;
$sum=0;
for $file (@list){
	chomp $file ;
	open(FILE,$file) or die ("Cannot open file: $!");
	@lines = <FILE>;
	close (FILE);
	$lines = @lines;
	$sum+=$lines;
#	print "$file have line $lines\n";
	$count++;
}
$average=ceil($sum/$count);
#printf "There are $average lines\n";


##### choose time stamp
if ($average <= 55 ) { 
 open(FILE,"time30.txt") or die ("Cannot open file: $!");
}elsif ($average > 55 && $average <= 80) { 
 open(FILE,"time20.txt") or die ("Cannot open file: $!");
}elsif ($average > 80 && $average <= 100) { 
 open(FILE,"time15.txt") or die ("Cannot open file: $!");
}elsif ($average > 100 && $average <= 150) { 
 open(FILE,"time10.txt") or die ("Cannot open file: $!");
}elsif ($average > 150 && $average <= 310) { 
 open(FILE,"time5.txt") or die ("Cannot open file: $!");
}elsif ($average > 310 && $average <= 380) { 
 open(FILE,"time4.txt") or die ("Cannot open file: $!");
}elsif ($average > 380 && $average <= 500) { 
 open(FILE,"time3.txt") or die ("Cannot open file: $!");
}elsif ($average > 500 && $average <= 800) { 
 open(FILE,"time2.txt") or die ("Cannot open file: $!");
}elsif ($average > 800 && $average <= 1500) { 
 open(FILE,"time1.txt") or die ("Cannot open file: $!");
}
$data[0][0]="time";
$hr=1;
while (<FILE>){
 chomp;
 $data[0][$hr] = $_;
 $data[5][$hr] = 100;
 $hr++;
}
close (FILE); 

######## add header

$data[1][0]="%usr";
$data[2][0]="%sys";
$data[3][0]="%wio";
$data[4][0]="%idle";
$data[5][0]="%peak";
$data[6][0]="%aver";
$count=0;

#### create data column

@list = `ls -tr *sar-u`;
for $file (@list){
 open(FILE,$file) or die ("Cannot open file: $!");
 @lines = <FILE>;
 close (FILE);
 $hr=1;
 for $data (@lines){
   if ( $data=~/\d+:\d+:\d+\s+\d+/) {
      $_ = $data;
      ($usr)=/\s+(\d+)/;
      ($sys)=/\s+\d+\s+(\d+)/;
      ($wio)=/\s+\d+\s+\d+\s+(\d+)/;
      ($idle)=/\s+\d+\s+\d+\s+\d+\s+(\d+)/;
        $data[1][$hr]+=$usr;
        $data[2][$hr]+=$sys;
        $data[3][$hr]+=$wio;
        $data[4][$hr]+=$idle;
        if ($data[5][$hr] > $idle) {
          if ($usr != 0 || $sys != 0) {
                $data[5][$hr]=$idle;
          }
        }
      $hr++;
   }
 }
 $count++;
}
close(FILE);

### write output
open(FILE,">aversar.out") or die ("Cannot open file: $!");
for (my $i=0;$i<=6;$i++){
  print FILE "$data[$i][0]\t";
}
print FILE "\n";
for(my $j = 1; $j < $hr ; $j++){
      print FILE "$data[0][$j]\t";
   for(my $i = 1; $i <= 4; $i++){
      printf FILE ("%d\t",$data[$i][$j]/$count);
#print FILE "$data[$i][$j]\t";
   }
   print FILE ceil(100-$data[5][$j])."\t";
   printf FILE ("%d\n",100-($data[4][$j]/$count));
   #print FILE "\n";
}
close(FILE);
